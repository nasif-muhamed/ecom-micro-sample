name: CI - Docker Build and Push

on:
  # It'll run the jobs only in case of manual triggrer
  workflow_dispatch:
    
  # It'll run the jobs in case of a new push
  # push:
  #   branches:
  #     - main  

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout repository
        uses: actions/checkout@v2

      # Step 2: Set up Docker
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 3: Log in to Docker Hub (Make sure to add these secrets in GitHub repo settings)
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 4: Build and push Docker images for each service

      # Api-Gateway service
      - name: Build and push api_gateway image
        run: |
          docker build -t muhdnasif/backend-api_gateway:latest ./api_gateway
          docker push muhdnasif/backend-api_gateway:latest

      # User service
      - name: Build and push user_service image
        run: |
          docker build -t muhdnasif/backend-user_service:latest ./user_service
          docker push muhdnasif/backend-user_service:latest

      # Product service
      - name: Build and push product_service image
        run: |
          docker build -t muhdnasif/backend-product_service:latest ./product_service
          docker push muhdnasif/backend-product_service:latest

      # Order service
      - name: Build and push order_service image
        run: |
          docker build -t muhdnasif/backend-order_service:latest ./order_service
          docker push muhdnasif/backend-order_service:latest

      # Notification service
      - name: Build and push notification_service image
        run: |
          docker build -t muhdnasif/backend-notification_service:latest ./notification_service
          docker push muhdnasif/backend-notification_service:latest

  # test:
  #   runs-on: ubuntu-latest
  #   needs: build

  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v2

  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v2

  #     - name: Start containers using Docker Compose
  #       run: |
  #         docker-compose -f docker-compose.yml up -d

  #     - name: Run tests for all services
  #       run: |
  #         docker-compose exec user_service python manage.py test
  #         docker-compose exec product_service python manage.py test
  #         docker-compose exec order_service python manage.py test
  #         docker-compose exec notification_service python manage.py test

  #     - name: Clean up containers
  #       run: |
  #         docker-compose down

  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: test

  #   steps:
  #     - name: Deploy to a server
  #       run: |
  #         echo "Hello world"